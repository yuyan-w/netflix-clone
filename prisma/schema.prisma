generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String  @id @default(cuid())
  name            String
  image           String?
  email           String?   @unique
  emailVerified   DateTime?
  hashedPassword  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  sessions        Session[]
  accounts        Account[]
  favorites     Favorite[]
}

model Account {
  id                 String  @id @default(cuid())
  userId           String
  type             String
  provider         String
  providerAccountId String
  refresh_token    String?
  access_token     String?
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String?
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                 String  @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id                 String  @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id                 String  @id @default(cuid())
  title         String
  description   String
  videoUrl      String
  thumbnailUrl  String
  genre         String
  duration      String
  favoritedBy  Favorite[]
}

model Favorite {
  user   User   @relation(fields: [userId], references: [id])
  userId String

  movie   Movie  @relation(fields: [movieId], references: [id])
  movieId String

  @@id([userId, movieId])
}